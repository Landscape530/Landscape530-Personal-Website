<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux System</title>
    <link href="/2024/03/10/linux/"/>
    <url>/2024/03/10/linux/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Linux 是一种自由和开放源码的类 UNIX 操作系统。</p><p>Linux 是在 1991 由林纳斯·托瓦兹在赫尔辛基大学上学时创立的，主要受到 Minix 和 Unix 思想的启发。</p><p>这章，将为大家介绍如何使用 Linux。</p><p>目前市面上较知名的Linux发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。</p><h3 id="基本指标"><a href="#基本指标" class="headerlink" title="基本指标"></a>基本指标</h3><p>1.带宽，表示链路的最大传输速率，单位是 b&#x2F;s （比特 &#x2F; 秒），带宽越大，其传输能力就越强。<br>2.延时，表示请求数据包发送后，收到对端响应，所需要的时间延迟。不同的场景有着不同的含义，比如可以表示建立 TCP 连接所需的时间延迟，或一个数据包往返所需的时间延迟。<br>3.吞吐率，表示单位时间内成功传输的数据量，单位是 b&#x2F;s（比特 &#x2F; 秒）或者 B&#x2F;s（字节 &#x2F; 秒），吞吐受带宽限制，带宽越大，吞吐率的上限才可能越高。<br>4.PPS，全称是 Packet Per Second（包 &#x2F; 秒），表示以网络包为单位的传输速率，一般用来评估系统对于网络的转发能力。<br>5.网络的可用性，表示网络能否正常通信；<br>6.并发连接数，表示 TCP 连接数量；<br>7.丢包率，表示所丢失数据包数量占所发送数据组的比率；<br>8.重传率，表示重传网络包的比例；</p><h3 id="ps-查看进程状况"><a href="#ps-查看进程状况" class="headerlink" title="ps:查看进程状况"></a>ps:查看进程状况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -aux<br></code></pre></td></tr></table></figure><p>ps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。</p><p>1.-a：显示当前终端下的所有进程信息，包括其他用户的进程。</p><p>2.-u：使用以用户为主的格式输出进程信息。</p><p>3.-x：显示当前用户在所有终端下的进程。</p><p>![](&#x2F;images&#x2F;ps aux.png)</p><p>USER：启动该进程的用户账号名称<br>PID：该进程的ID号，在当前系统中是唯一的<br>%CPU：CPU占用的百分比<br>%MEM：内存占用的百分比</p><p>VSZ：占用虚拟内存（swap空间）的大小<br>RSS：占用常驻内存（物理内存）的大小</p><p>TTY：该进程在哪个终端上运行。“？”表未知或不需要终端<br>STAT：显示了进程当前的状态，如S（休眠）、R（运行）、Z（僵死）、&lt;（高优先级）、N（低优先级）、s（父进程）、+（前台进程）。对处于僵死状态的进程应予以手动终止。</p><p>START：启动该进程的时间<br>TIME：该进程占用CPU时间<br>COMMAND：启动该进程的命令的名称</p><p>STAT中状态缩写：<br>D：无法中断的休眠状态（通常 IO 的进程）；<br>R：正在运行可中在队列中可过行的；<br>S：处于休眠状态；<br>T：停止或被追踪；<br>W：进入内存交换 （从内核2.6开始无效）；<br>X：死掉的进程 （基本很少见）；<br>Z：僵尸进程；<br>&lt;：优先级高的进程<br>N：优先级较低的进程<br>L：有些页被锁进内存；<br>s：进程的领导者（在它之下有子进程）；<br>l：多线程，克隆线程（使用 CLONE_THREAD, 类似 NPTL pthreads）；<br>+：位于后台的进程组；</p><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -aux --<span class="hljs-built_in">sort</span>=-%cpu<br></code></pre></td></tr></table></figure><p>按照 CPU 使用率降序排序，即最高 CPU 使用率的进程排在前面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -aux --<span class="hljs-built_in">sort</span>=pid<br></code></pre></td></tr></table></figure><p>这将按照进程 ID 升序排序，即最小的进程 ID 的进程排在前面。</p><p><strong>总结：ps aux 是以简单列表的形式显示出进程信息。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -elf<br></code></pre></td></tr></table></figure><p>4.-e：显示系统内的所有进程信息。</p><p>5.-l：使用长（long）格式显示进程信息。</p><p>6.-f：使用完整的（full）格式显示进程信息。</p><p><img src="/images/ps-elf.png"></p><p>7.-N： 显示不匹配指定条件的进程。例如，ps -N java​ 将显示不包含 java​ 进程的所有进程。</p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何更新博客</title>
    <link href="/2023/04/04/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/04/04/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="进入-D-Program-Files-x86-GIT-Git-仓库-blog-source-posts-中"><a href="#进入-D-Program-Files-x86-GIT-Git-仓库-blog-source-posts-中" class="headerlink" title="进入 D:\Program Files (x86)\GIT\Git\仓库\blog\source\posts 中"></a>进入 D:\Program Files (x86)\GIT\Git\仓库\blog\source\posts 中</h3><p>进行修改</p><h3 id="文件cmd中-执行以下操作："><a href="#文件cmd中-执行以下操作：" class="headerlink" title="文件cmd中 执行以下操作："></a>文件cmd中 执行以下操作：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo g<br>$ hexo d<br></code></pre></td></tr></table></figure><h3 id="github-desktop-中-Fetch-origin-后-Push-origin"><a href="#github-desktop-中-Fetch-origin-后-Push-origin" class="headerlink" title="github-desktop 中 Fetch origin 后 Push origin"></a>github-desktop 中 Fetch origin 后 Push origin</h3><h2 id="Deal"><a href="#Deal" class="headerlink" title="Deal!!!"></a>Deal!!!</h2>]]></content>
    
    
    <categories>
      
      <category>信息</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自我介绍</title>
    <link href="/2023/03/26/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/03/26/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我叫黄磊"><a href="#我叫黄磊" class="headerlink" title="我叫黄磊"></a>我叫黄磊</h2><p>今年23岁</p><p>来自浙江杭州</p><h3 id="一个外向活泼的人"><a href="#一个外向活泼的人" class="headerlink" title="一个外向活泼的人"></a>一个外向活泼的人</h3><p>在浙江省临安中学度过了快乐的三年</p><p>香港中文大学（深圳）计算机工程 Computer Engineering</p><p>篮球、唱歌，Playing with my friends</p><h3 id="目前"><a href="#目前" class="headerlink" title="目前"></a>目前</h3><p>致力于寻找实习</p><h3 id="明年"><a href="#明年" class="headerlink" title="明年"></a>明年</h3><p>香港中文大学 信息工程 理学硕士 Information Engineering</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><h2 id="加油！！！"><a href="#加油！！！" class="headerlink" title="加油！！！"></a>加油！！！</h2><p><img src="/images/%E8%AF%81%E4%BB%B6%E7%85%A7.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>信息</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇博客</title>
    <link href="/2023/03/26/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/03/26/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to the world of C++! Here, I am sure that you will have a taste of the wonder of C++. So let’s start! </p><h2 id="Generally-Speaking"><a href="#Generally-Speaking" class="headerlink" title="Generally Speaking"></a>Generally Speaking</h2><p>C++ 是一种高级语言，它是由 Bjarne Stroustrup 于 1979年在贝尔实验室开始设计开发的。C++ 进一步扩充和完善了 C 语言，是一种面向对象的程序设计语言。C++ 可运行于多种平台上，如 Windows、MAC 操作系统以及 UNIX 的各种版本</p><p>C++ 是一种静态类型的、编译式的、通用的、大小写敏感的、不规则的编程语言，支持过程化编程、面向对象编程和泛型编程。</p><p>C++ 被认为是一种中级语言，它综合了高级语言和低级语言的特点</p><h2 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h2><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vector &lt;<span class="hljs-built_in">type</span>&gt; a; <span class="hljs-comment">## size = capacity = 0</span><br>$ vector &lt;<span class="hljs-built_in">type</span>&gt; a(int n); <span class="hljs-comment">## size = 0 , capacity =n</span><br>$ vector &lt;<span class="hljs-built_in">type</span>&gt; a(int n, <span class="hljs-built_in">type</span> i); <span class="hljs-comment">## size = n , capacity =n | 赋值 ： n个i</span><br>$ vector &lt;<span class="hljs-built_in">type</span>&gt; a(vector &lt;<span class="hljs-built_in">type</span>&gt; b); <span class="hljs-comment">## 复制构造函数</span><br>$ vector &lt;<span class="hljs-built_in">type</span>&gt; a(vector &lt;<span class="hljs-built_in">type</span>&gt; b.begin(), vector &lt;<span class="hljs-built_in">type</span>&gt; b.end()); <span class="hljs-comment">## 复制另一vector的[begin,end）区间内容 并创建新vector</span><br></code></pre></td></tr></table></figure><h3 id="增加函数"><a href="#增加函数" class="headerlink" title="增加函数"></a>增加函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vector&lt;int&gt;a;<br>$ a.push_back(1); <span class="hljs-comment">## 先创建元素，再拷贝或移动到容器中</span><br>$ a.emplace_back(2);  <span class="hljs-comment">## 直接在末尾创建元素</span><br>$ a.insert(a.end(),3) <span class="hljs-comment">## 向迭代器指向元素前 增加一个元素</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test_my_site</title>
    <link href="/2023/03/26/test-my-site/"/>
    <url>/2023/03/26/test-my-site/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World —— 编程初探</title>
    <link href="/2023/03/26/hello-world/"/>
    <url>/2023/03/26/hello-world/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">黄磊的课堂</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start-开始！"><a href="#Quick-Start-开始！" class="headerlink" title="Quick Start 开始！"></a>Quick Start 开始！</h2><h3 id="Create-a-new-post-创造一个新的博客"><a href="#Create-a-new-post-创造一个新的博客" class="headerlink" title="Create a new post 创造一个新的博客"></a>Create a new post 创造一个新的博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server-运行服务器"><a href="#Run-server-运行服务器" class="headerlink" title="Run server 运行服务器"></a>Run server 运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files-生成静态文件"><a href="#Generate-static-files-生成静态文件" class="headerlink" title="Generate static files 生成静态文件"></a>Generate static files 生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites-调配远程仓库"><a href="#Deploy-to-remote-sites-调配远程仓库" class="headerlink" title="Deploy to remote sites  调配远程仓库"></a>Deploy to remote sites  调配远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
